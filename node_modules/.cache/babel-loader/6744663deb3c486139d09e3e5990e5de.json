{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/moazam/Documents/react_apps/Cloned Robofriends/robofriend/src/containers/App.js\";\nimport React from 'react';\nimport CardList from '../components/CardList';\nimport { connect } from 'react-redux';\nimport SearchBox from '../components/searchbox';\nimport Scroll from '../components/scroll.js';\nimport ErrorBoundry from './errorboundry';\nimport { setSearchField, requestRobots } from '../actions';\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchRobots.searchField,\n    isPending: state.requestRobots.isPending,\n    robots: state.requestRobots.robots,\n    error: state.requestRobots.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSearchChange: event => dispatch(setSearchField(event.target.value)),\n    onRequestRobots: () => requestRobots(dispatch)\n  };\n};\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: []\n    };\n  }\n\n  componentDidMount() {\n    this.props.onRequestRobots();\n  }\n\n  render() {\n    const {\n      searchField,\n      onSearchChange,\n      robots\n    } = this.props;\n    const filteredRobots = this.state.robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n\n    if (this.state.robots.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tc\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"f1\",\n          children: \"RoboFriends\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n          searchChange: onSearchChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Scroll, {\n          children: /*#__PURE__*/_jsxDEV(ErrorBoundry, {\n            children: /*#__PURE__*/_jsxDEV(CardList, {\n              robots: filteredRobots\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 4\n      }, this);\n    }\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/moazam/Documents/react_apps/Cloned Robofriends/robofriend/src/containers/App.js"],"names":["React","CardList","connect","SearchBox","Scroll","ErrorBoundry","setSearchField","requestRobots","mapStateToProps","state","searchField","searchRobots","isPending","robots","error","mapDispatchToProps","dispatch","onSearchChange","event","target","value","onRequestRobots","App","Component","constructor","componentDidMount","props","render","filteredRobots","filter","robot","name","toLowerCase","includes","length"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,YAA9C;;AAOA,MAAMC,eAAe,GAAIC,KAAD,IAAS;AAChC,SAAO;AACNC,IAAAA,WAAW,EAAED,KAAK,CAACE,YAAN,CAAmBD,WAD1B;AAENE,IAAAA,SAAS,EAAEH,KAAK,CAACF,aAAN,CAAoBK,SAFzB;AAGNC,IAAAA,MAAM,EAAEJ,KAAK,CAACF,aAAN,CAAoBM,MAHtB;AAINC,IAAAA,KAAK,EAAEL,KAAK,CAACF,aAAN,CAAoBO;AAJrB,GAAP;AAMA,CAPD;;AASA,MAAMC,kBAAkB,GAAIC,QAAD,IAAY;AACtC,SAAO;AACNC,IAAAA,cAAc,EAAGC,KAAD,IAAUF,QAAQ,CAACV,cAAc,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf,CAD5B;AAENC,IAAAA,eAAe,EAAE,MAAKd,aAAa,CAACS,QAAD;AAF7B,GAAP;AAIA,CALD;;AAWA,MAAMM,GAAN,SAAkBtB,KAAK,CAACuB,SAAxB,CACA;AACCC,EAAAA,WAAW,GACX;AACC;AACA,SAAKf,KAAL,GAAW;AACVI,MAAAA,MAAM,EAAE;AADE,KAAX;AAGA;;AACDY,EAAAA,iBAAiB,GAAE;AAClB,SAAKC,KAAL,CAAWL,eAAX;AACA;;AACDM,EAAAA,MAAM,GACN;AACC,UAAM;AAACjB,MAAAA,WAAD;AAAcO,MAAAA,cAAd;AAA8BJ,MAAAA;AAA9B,QAAwC,KAAKa,KAAnD;AACA,UAAME,cAAc,GAAC,KAAKnB,KAAL,CAAWI,MAAX,CAAkBgB,MAAlB,CAAyBC,KAAK,IACnD;AACC,aAAOA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCvB,WAAW,CAACsB,WAAZ,EAAlC,CAAP;AACA,KAHoB,CAArB;;AAIA,QAAG,KAAKvB,KAAL,CAAWI,MAAX,CAAkBqB,MAAlB,KAA6B,CAAhC,EACA;AACC,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACA,KAHD,MAKA;AACC,0BACA;AAAK,QAAA,SAAS,EAAC,IAAf;AAAA,gCACC;AAAI,UAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC,QAAC,SAAD;AAAW,UAAA,YAAY,EAAEjB;AAAzB;AAAA;AAAA;AAAA;AAAA,gBAFD,eAGC,QAAC,MAAD;AAAA,iCACC,QAAC,YAAD;AAAA,mCACC,QAAC,QAAD;AAAU,cAAA,MAAM,EAAEW;AAAlB;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBAHD;AAAA;AAAA;AAAA;AAAA;AAAA,cADA;AAWA;AACD;;AApCF;;AAwCA,eAAe1B,OAAO,CAACM,eAAD,EAAkBO,kBAAlB,CAAP,CAA6CO,GAA7C,CAAf","sourcesContent":["import React from 'react';\nimport CardList from '../components/CardList';\nimport { connect } from 'react-redux';\nimport SearchBox from '../components/searchbox';\nimport Scroll from '../components/scroll.js';\nimport ErrorBoundry from './errorboundry';\nimport { setSearchField, requestRobots } from '../actions';\n\n\n\n\n\n\nconst mapStateToProps = (state)=>{\n\treturn {\n\t\tsearchField: state.searchRobots.searchField,\n\t\tisPending: state.requestRobots.isPending,\n\t\trobots: state.requestRobots.robots,\n\t\terror: state.requestRobots.error\n\t}\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n\treturn {\n\t\tonSearchChange: (event)=> dispatch(setSearchField(event.target.value)),\n\t\tonRequestRobots: ()=> requestRobots(dispatch)\n\t}\n}\n\n\n\n\n\nclass App extends React.Component\n{\n\tconstructor()\n\t{\n\t\tsuper()\n\t\tthis.state={\n\t\t\trobots: []\n\t\t}\n\t}\n\tcomponentDidMount(){\n\t\tthis.props.onRequestRobots();\n\t}\n\trender()\n\t{\n\t\tconst {searchField, onSearchChange, robots} = this.props;\n\t\tconst filteredRobots=this.state.robots.filter(robot=>\n\t\t{\n\t\t\treturn robot.name.toLowerCase().includes(searchField.toLowerCase());\n\t\t})\n\t\tif(this.state.robots.length === 0)\n\t\t{\n\t\t\treturn <h1>Loading..</h1>\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn(\n\t\t\t<div className='tc'>\n\t\t\t\t<h1 className='f1'>RoboFriends</h1>\n\t\t\t\t<SearchBox searchChange={onSearchChange}/>\n\t\t\t\t<Scroll>\n\t\t\t\t\t<ErrorBoundry>\n\t\t\t\t\t\t<CardList robots={filteredRobots} />\n\t\t\t\t\t</ErrorBoundry>\n\t\t\t\t</Scroll>\n\t\t\t</div>\n\t\t\t);\n\t\t}\t\n\t}\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}